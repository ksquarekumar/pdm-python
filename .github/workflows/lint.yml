name: Tests

on:
  workflow_run:
    workflows: ["Triage"]
    types: [completed]
  workflow_dispatch:
  push:
    branches:
      - PROD
  pull_request:
    types: [opened, synchronize]

concurrency:
  group: python-precommit-${{ github.head_ref }}-1'
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write
  statuses: write
  repository-projects: write

jobs:
  triage:
    uses: "./.github/workflows/triage.yml"
  pre-commit:
    name: Tests
    runs-on: ubuntu-latest
    if: "! (github.event.pull_request.draft || (startsWith(github.ref_name, 'dependabot/') || startsWith(github.ref_name, 'Chore(deps)')))"
    strategy:
      matrix:
        python-version: [3.12]
        session: [lint, tests]

    env:
      PYTHONUNBUFFERED: "1"
      PYTHONIOENCODING: "UTF-8"
      PYTHONDONTWRITEBYTECODE: "1"
      PYTHON_VERSION: ${{ matrix.python-version }}
      UV_VERSION: "0.4.20"
      FORCE_COLOR: "1"
      PRE_COMMIT_COLOR: "always"
      APP_ENV: "dev"
      DEBUG: "True"
      LOG_LEVEL: "DEBUG"
      CI: "true"
      PORT: "8000"
      LOCAL_SERVICE_URL: "http://localhost:8000"
      PRE_COMMIT_CACHE: ".pre-commit-cache"

    steps:
      - name: Set up QEMU
        if: matrix.session == 'container_tests'
        id: setup-qemu
        uses: docker/setup-qemu-action@v3.2.0

      - name: Set up Docker Buildx
        if: matrix.session == 'container_tests'
        id: setup-buildx
        uses: docker/setup-buildx-action@v3.6.1

      - name: Login to Docker Registry
        if: matrix.session == 'container_tests'
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check out the repository
        id: checkout
        uses: actions/checkout@v4.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3.1.4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ env.UV_VERSION }}
          enable-cache: true
          cache-dependency-glob: |
            .pre-commit-config.yaml
            pyproject.toml
            pdm.lock
            requirements.txt

      - name: Setup Python
        run: |
          uv python install ${{ env.PYTHON_VERSION }} --python-preference only-managed
          uv tool install wheel
          uv tool install python-build
          make install-tools

      - name: Install dependencies
        run: |
          uv sync --all-extras --dev

      - name: cache pre-commit
        id: cache-pre-commit
        uses: actions/cache@v4.0.2
        with:
          path: ~/.cache/pre-commit/
          key: pre-commit-|${{ env.PYTHON_VERSION }}|${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Install pre-commit
        id: install-pre-commit
        if: steps.cache-pre-commit.outputs.cache-hit != 'true'
        run: pdm run pre-commit install

      - name: Run Pre-commit
        if: matrix.session == 'lint'
        run: pdm run ${{ matrix.session }}

      - name: Run Tests
        if: matrix.session == 'tests'
        run: pdm run ${{ matrix.session }}

      - name: Run Container Tests
        if: matrix.session == 'container_tests'
        env:
          PYTHON_VERSION: ${{ env.PYTHON_VERSION }}
          UV_VERSION: ${{ env.UV_VERSION }}
          LOG_LEVEL: ${{ env.LOG_LEVEL }}
          PORT: ${{ env.PORT }}
        run: |
          mkdir -p ./credentials
          cp .test.env .env
          docker buildx bake --file docker-compose.yml --file docker-compose-cache.json
          pdm run container_tests
