name: Tests

on:
  workflow_dispatch:
  push:
    branches:
      - main # The 'main' branch
      - prod* # Any branch that starts with 'prod'
      - dev* # Any branch that starts with 'dev'
  pull_request:
    types: [opened, synchronize]

concurrency:
  group: python-precommit-${{ github.head_ref }}-1'
  cancel-in-progress: true

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    if: "! (startsWith(github.ref_name, 'dependabot/') || startsWith(github.ref_name, 'Chore(deps)'))" # Ignore dependabot branches
    strategy:
      matrix:
        python-version: [3.11]
        session: [precommit, tests]

    env:
      PYTHONUNBUFFERED: "1"
      PYTHONIOENCODING: "UTF-8"
      PYTHON_VERSION: ${{ matrix.python-version }}

      FORCE_COLOR: "1"
      PRE_COMMIT_COLOR: "always"
      CI: "true"

    steps:
      - name: Set up QEMU
        if: matrix.session == 'tests'
        id: setup-qemu
        uses: docker/setup-qemu-action@v3.2.0

      - name: Set up Docker Buildx
        if: matrix.session == 'tests'
        id: setup-buildx
        uses: docker/setup-buildx-action@v3.6.1

      - name: Login to Docker Registry
        if: matrix.session == 'tests'
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check out the repository
        id: checkout
        uses: actions/checkout@v4.1.7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build docker-compose
        if: matrix.session == 'tests'
        env:
          AWS_ACCESS_KEY_ID: "minio" # pragma: allowlist-secret
          AWS_SECRET_ACCESS_KEY: "minio123" # pragma: allowlist-secret
          DATA_WAREHOUSE_TYPE: "duckdb"
          DUCKDB_DATABASE: "test_database.duckdb"
          MYSQL_ROOT_HOST: "%" # pragma: allowlist-secret
          MYSQL_ROOT_PASSWORD: "mysql" # pragma: allowlist-secret
          MYSQL_USER: "mlflow" # pragma: allowlist-secret
          MYSQL_PASSWORD: "mlflow" # pragma: allowlist-secret
          MYSQL_DATABASE: "mlflow_database"
          MLFLOW_S3_ENDPOINT_URL: "http://localhost:9000"
          MLFLOW_TRACKING_URI: "http://localhost:5000"
        run: docker buildx bake --file docker-compose.yml --file docker-compose-cache.json

      - name: Setup Python
        uses: actions/setup-python@v5.2.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - run: |
          python -m pip install --upgrade pip wheel setuptools python-build
          python -m pip install --upgrade pipx
          python -m pipx install virtualenv

      - name: Set up PDM
        uses: pdm-project/setup-pdm@v4.1
        with:
          python-version: ${{ matrix.python-version }}
          cache: true
          cache-dependency-path: |
            ./pdm.lock
            ./pdm.new.lock

      - name: Install dependencies
        run: |
          pdm install -G:all --without=jupyter

      - name: cache pre-commit
        id: cache-pre-commit
        uses: actions/cache@v4.0.2
        with:
          path: ~/.cache/pre-commit/
          key: pre-commit-|${{ env.PYTHON_VERSION }}|${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Install pre-commit
        id: install-pre-commit
        if: steps.cache-pre-commit.outputs.cache-hit != 'true'
        run: pdm run pre-commit install

      - name: Run Pre-commit
        if: matrix.session == 'precommit'
        run: pdm run nox -s ${{ matrix.session }}

      - name: Run Tests
        if: matrix.session == 'tests'
        run: pdm run nox -s tests -- ./tests
